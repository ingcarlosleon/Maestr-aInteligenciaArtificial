# -*- coding: utf-8 -*-
"""computeSales.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18SRP7TU2TcfXZ8gpV96nmSdVxLWwDoZz
"""

import json
import sys
import time

def cargar_archivo_json(ruta_archivo):
    """
    Carga un archivo JSON y devuelve su contenido.
    """
    try:
        with open(ruta_archivo, 'r') as archivo:
            datos = json.load(archivo)
            # Asumiendo que los datos están en un formato de lista
            return datos if isinstance(datos, list) else [datos]
    except json.JSONDecodeError as e:
        print(f"Error al decodificar JSON de {ruta_archivo}: {e}")
    except FileNotFoundError as e:
        print(f"Archivo no encontrado: {e}")
    except Exception as e:
        print(f"Ocurrió un error al cargar {ruta_archivo}: {e}")
    return None

def calcular_total_ventas(ventas, precios):
    """
    Calcula el total de las ventas basándose en los precios.
    """
    total = 0
    for venta in ventas:
        producto = venta.get("Product")
        cantidad = venta.get("Quantity", 0)

        if producto in precios:
            total += precios[producto] * cantidad
        else:
            print(f"Advertencia: Producto '{producto}' no encontrado en el catálogo de precios.")
    return total

def escribir_resultados_en_archivo(nombre_archivo, contenido):
    """
    Escribe el contenido dado en un archivo.
    """
    try:
        with open(nombre_archivo, 'w') as archivo:
            archivo.write(contenido)
    except Exception as e:
        print(f"Ocurrió un error al escribir en {nombre_archivo}: {e}")

def principal(ruta_catalogo_precios, ruta_registro_ventas):
    tiempo_inicio = time.time()

    # Cargar archivos JSON
    catalogo = cargar_archivo_json(ruta_catalogo_precios)
    ventas = cargar_archivo_json(ruta_registro_ventas)

    if catalogo is None or ventas is None:
        print("Error al cargar archivos. Finalizando.")
        return

    # Transformar catálogo en un diccionario con 'title' como clave
    catalogo_precios = {producto["title"]: producto["price"] for producto in catalogo}

    total_ventas = calcular_total_ventas(ventas, catalogo_precios)

    resultados = f"Total Ventas: ${total_ventas:.2f}\n"
    tiempo_transcurrido = time.time() - tiempo_inicio
    resultados += f"Tiempo Transcurrido: {tiempo_transcurrido:.2f} segundos"
    print(resultados)
    escribir_resultados_en_archivo("SalesResults.txt", resultados)

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Uso: python computeSales.py TC1.ProductList.json TC1.Sales.json")
    else:
        principal(sys.argv[1], sys.argv[2])